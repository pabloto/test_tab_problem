**free
Ctl-Opt
  NoMain
  Expropts(*AlwBlankNum)
  Option(*NoUnRef :*SrcStmt :*NoDebugIo)
  DatFmt(*Iso) TimFmt(*Iso)
  Debug(*Constants)
  AlwNull(*UsrCtl)
  DftName(TESTSRVPGM)
  Text('Modulo per service program TESTSRVPGM');

Dcl-S GetNextYearIdx              Int(5);
Dcl-S GetNextYearDate             Date;
// ____________________________________________________________________________
Dcl-Proc GetNextYear Export;
  Dcl-Pi GetNextYear;
    StartDate       Date;             // Input Data
    DaysToAdd       Int(10);           // Input Data
    ReturnDate      Date;             // Return Data
    n_StartDate     Int(5) Const;     // Input Data null
    n_DaysToAdd     Int(5);           // Input Data
    n_ReturnDate    Int(5);           // Return Data null
    State           Char(5);
    Function        VarChar(517) Const;
    Specific        VarChar(128) Const;
    errorMsg        VarChar(1000);
    CallType        Int(10) Const;
  End-Pi GetNextYear;
  // ____________________________________________________________________________
  Dcl-C CALL_OPEN    -1;
  Dcl-C CALL_FETCH    0;
  Dcl-C CALL_CLOSE    1;
  Dcl-C PARM_NULL    -1;
  Dcl-C PARM_NOTNULL  0;

  // ____________________________________________________________________________

  Select;
    When (CallType = CALL_OPEN);
      If (n_StartDate = PARM_NULL);
        StartDate = %Date();
      EndIf;
      If (n_DaysToAdd = PARM_NULL);
        DaysToAdd = 365;
      EndIf;
      GetNextYearDate = StartDate;
      GetNextYearIdx = 0;

    When (CallType = CALL_FETCH);
      ReturnDate = GetNextYearDate;
      ReturnDate += %Days(1);
      If (GetNextYearIdx >= DaysToAdd);
        State = '02000';
        Return;
      EndIf;
      GetNextYearIdx += 1;
      GetNextYearDate = ReturnDate;

    When (CallType = CALL_CLOSE);
      Reset GetNextYearDate;
      Reset GetNextYearIdx;
      State = '00000';
      Return;

  EndSl;

End-Proc GetNextYear;